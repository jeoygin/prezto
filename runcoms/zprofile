#
# Executes commands at login pre-zshrc.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

#
# Browser
#

if [[ "$OSTYPE" == darwin* ]]; then
  export BROWSER='open'
fi

#
# Editors
#

export EDITOR='vim'
export VISUAL='vim'
export PAGER='less'

#
# Language
#

if [[ -z "$LANG" ]]; then
  export LANG='en_US.UTF-8'
fi

#
# Paths
#

# Ensure path arrays do not contain duplicates.
typeset -gU cdpath fpath mailpath path

# Set the the list of directories that cd searches.
# cdpath=(
#   $cdpath
# )

# Set the list of directories that Zsh searches for programs.
path=(
  /usr/local/{bin,sbin}
  $path
)

#
# Less
#

# Set the default Less options.
# Mouse-wheel scrolling has been disabled by -X (disable screen clearing).
# Remove -X and -F (exit if the content fits on one screen) to enable it.
export LESS='-F -g -i -M -R -S -w -X -z-4'

# Set the Less input preprocessor.
# Try both `lesspipe` and `lesspipe.sh` as either might exist on a system.
if (( $#commands[(i)lesspipe(|.sh)] )); then
  export LESSOPEN="| /usr/bin/env $commands[(i)lesspipe(|.sh)] %s 2>&-"
fi

#
# Temporary Files
#

if [[ ! -d "$TMPDIR" ]]; then
  export TMPDIR="$(mktemp -d)"
fi

TMPPREFIX="${TMPDIR%/}/zsh"

source ~/.zalias

export TERM="xterm-256color"
export LC_CTYPE="en_US.UTF-8"
export LANG="en_US.UTF-8"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

export PATH=$HOME/bin:/usr/local/bin:~/bin:~/usr/bin:~/usr/local/bin:~/usr/local/protobuf/bin:$PATH
# export MANPATH="/usr/local/man:$MANPATH"

java_homes=(
  /Library/Java/JavaVirtualMachines/jdk1.8.0_65.jdk/Contents/Home
  /usr/java/jdk
)
for h in $java_homes
do
  if [[ -e "$h/bin/java" ]]; then
    export JAVA_HOME="$h"
    break
  fi
done
export CLASSPATH=.:$JAVA_HOME/lib:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar

export M2_HOME=/opt/develop/maven/3.3.9
export MAVEN_OPTS="-Xms256m -Xmx1024m -Dfile.encoding=UTF-8"

export SCALA_HOME=/opt/develop/scala/current

export SBT_HOME=/opt/develop/sbt

export ANDROID_HOME=/usr/local/opt/android-sdk
export ANDROID_NDK_HOME=/usr/local/opt/android-ndk
export NDK_ROOT="$ANDROID_NDK_HOME"
#export PATH="~/local/android-toolchain/bin/:$PATH"

export CUDA_HOME=/usr/local/cuda
export DYLD_LIBRARY_PATH="$DYLD_LIBRARY_PATH:$CUDA_HOME/lib"
export PATH="$CUDA_HOME/bin:$PATH"

export GOPATH=~/go

export GTAGSLIBPATH=$HOME/.gtags/

export NODE_PATH=~/.nvm/versions/node/v5.0.0/lib/node_modules

export MAGICK_HOME="/opt/ImageMagick-7.0.1"

export PYTHONPATH="$HOME/local/lib/python2.7/site-packages"

export LD_LIBRARY_PATH=~/usr/lib:/usr/local/cuda/lib64/:/usr/lib64/atlas/:/usr/local/cuda/lib/:/usr/lib64/
export C_INCLUDE_PATH=~/usr/include:/usr/local/cuda/include/
export CPLUS_INCLUDE_PATH=~/usr/include:/usr/local/cuda/include/
export PATH=$HOME/usr/bin:/usr/local/cuda/bin/:$PATH
export LIBRARY_PATH=~/usr/lib:/usr/lib64/atlas/:/usr/local/cuda/lib64/:/usr/lib64/

export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig/

export PATH=/usr/local/ssl/macos-x86_64/bin/:$PATH
export LIBRARY_PATH=/usr/local/ssl/macos-x86_64/lib/:$LIBRARY_PATH
export LD_LIBRARY_PATH=/usr/local/ssl/macos-x86_64/lib/:$LD_LIBRARY_PATH
export C_INCLUDE_PATH=/usr/local/ssl/macos-x86_64/include/:$C_INCLUDE_PATH
export CPLUS_INCLUDE_PATH=/usr/local/ssl/macos-x86_64/include/:$C_INCLUDE_PATH

export MANPATH="/usr/local/opt/coreutils/libexec/gnuman:/usr/local/opt/gnu-sed/libexec/gnuman:$MANPATH"
export PATH=$JAVA_HOME/bin:$M2_HOME/bin:$SCALA_HOME/bin:$SBT_HOME/bin:~/.cabal/bin:$GOPATH/bin:$HOME/.rvm/bin:$PATH
export PATH=$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/25.0.2:$ANDROID_NDK_HOME/bin:$PATH
export PATH=$HOME/bin:$HOME/local/bin:$HOME/.local/bin:/usr/local/opt/coreutils/libexec/gnubin:/usr/local/opt/gnu-sed/libexec/gnubin:/usr/local/bin:/opt/develop/jetbrains/idea-IU/bin:/opt/develop/jetbrains/WebStorm/bin:$PATH

export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles

# autojump
which brew >/dev/null 2>&1 && [[ -s $(brew --prefix)/etc/profile.d/autojump.sh ]] && . $(brew --prefix)/etc/profile.d/autojump.sh
[[ -s $HOME/.autojump/etc/profile.d/autojump.sh ]] && source $HOME/.autojump/etc/profile.d/autojump.sh

function activate-python() {
  export WORKON_HOME=$HOME/.virtualenvs
  if [[ -x /usr/local/bin/virtualenvwrapper.sh ]]; then
    source /usr/local/bin/virtualenvwrapper.sh
  else
    source ~/.local/bin/virtualenvwrapper.sh
  fi
  workon python27
}
function activate-rvm() {
  [[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
}
function activate-desk() {
  # Hook for desk activation
  [ -n "$DESK_ENV" ] && source "$DESK_ENV" || true
}
function activate-nvm() {
  export NVM_DIR="/Users/jeoygin/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
}
function activate-sdk() {
  #THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
  export SDKMAN_DIR="/Users/jeoygin/.sdkman"
  [[ -s "/Users/jeoygin/.sdkman/bin/sdkman-init.sh" ]] && source "/Users/jeoygin/.sdkman/bin/sdkman-init.sh"
}
function activate-desk() {
  # Hook for desk activation
  [ -n "$DESK_ENV" ] && source "$DESK_ENV"
}
function find-image() {
  [ $# -lt 1 ] && echo "find-image <DIR>" && return -1
  find "$@" -iname '*.jpg' -o -iname '*.jpeg' -o -iname '*.png'
}
function pack() {
  [ $# -lt 1 ] && echo "$0 <FILES>" && return -1
  _pack="${1}.tar.gz"
  if [[ $# -gt 1 ]]; then
    _pack="pack.tar.gz"
  fi
  tar zcf "$_pack" "$@"
}
function packup() {
  [ $# -lt 1 ] && echo "packup <FILES>" && return -1
  tar zc "$@" | mupload -f -
}
function packdown() {
  [ $# -lt 1 ] && echo "packdown <tar URL>" && return -1
  curl "$1" | tar zx
}
function sample() {
  _n=${1:-10}
  shuf | head -n ${_n}
}
function imgtk-ls() {
  [ $# -lt 1 ] && echo "imgtk-ls <DB>" && return -1
  imgtk -s "$1" -c list
}
function imgtk-save() {
  [ $# -lt 2 ] && echo "imgtk-ls <SRC DB> <DST DB>" && return -1
  imgtk -s "$1" -d "$2" -c save
}
function imgtk-cat() {
  [ $# -lt 1 ] && echo "imgtk-ls <DB>" && return -1
  imgtk -s "$1" -c cat
}
function imgtk-1c() {
  awk '{print $1}' "$@"
}
function imgtk-2c() {
  awk '{print $1"::"$1}' "$@"
}

# activate-python

autoload -U compinit && compinit -u
